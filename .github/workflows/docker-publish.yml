name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    schedule:
      # Every Sunday night, once a week
      - cron: '0 0 * * 0'
env:
  IMAGE_NAME: libpostal-rest
  CLUSTER_NAME: libpostal-production-api
  SERVICE_NAME: libpostal-production-api-service
  ECR_REPOSITORY: libpostal-production-api
  $DOCKER_TARGET_PLATFORMS: linux/amd64,linux/arm64

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Run Buildx (push image)
        if: success()
        run: |
          docker buildx build
          --platform "$DOCKER_TARGET_PLATFORMS"
          --tag "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          --file ./Dockerfile
          --push .

#      - name: Deploy
#        run: |
#          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment